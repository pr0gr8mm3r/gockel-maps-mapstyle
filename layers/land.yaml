layers:

    boundaries:
        data: { source: openmaptiles, layer: boundary }
        filter: { admin_level: 2, not: { maritime: 1 }}
        draw:
            boundary_dashes:
                order: 80
                color: global.boundary_color
                width: 1px

    water:
        data: { source: openmaptiles }
        filter: { not: { brunnel: tunnel }}
        draw:
            polygons:
                order: 2
                color: global.water_color

        shore_lines:
            filter: { $zoom: { min: 16 } }
            draw:
                lines-coast:
                    order: 3
                    width: [[16,20px],[18,10m]] # actually visually 1/3
                    color: global.water_color

    waterways:
        data: { source: openmaptiles , layer: waterway }
        filter: { not: { brunnel: tunnel }}
        draw:
            lines:
                order: 3
                join: round
                cap: square

        river_lines:
            filter: { class: [river, canal] }
            draw:
                lines:
                    color: global.water_color
                    width: [[10, 1px], [17, 6px], [18, 12m]]

        stream_lines:
            filter: { class: [stream, ditch, drain], $zoom: { min: 15 }}
            draw:
                lines:
                    color: global.water_color
                    width: [[15, 1px], [17, 2px], [18, 3.5m]]

    buildings:
        data: { source: openmaptiles, layer: building }
        filter: { $zoom: { min: 16 }, hide_3d: false }
        draw:
            buildings-style:
                order: 100
                color: global.building_color
                extrude: function() { return feature.render_height; }
            buildings-outline-style:
                order: 99
                color: global.building_outline_color
                width: [[16, 1px], [18,2px], [19,4px]]
                extrude: 0

    landcover:
        data: { source: openmaptiles }
        draw:
            polygons:
                order: 1
        green:
            filter:
                class:
                    - farmland
                    - grass
            draw:
                polygons:
                    color: global.green_color
        trees:
            filter:
                class:
                    - wood
            draw:
                polygons:
                    order: 1
                    color: global.forest_color

    landuse:
        data: { source: openmaptiles }
        draw:
            polygons:
                order: 1
        town:
            filter:
                class:
                    - residential
                    - industrial
                    - railway
                    - bus_station
                    - religious
                    - commercial
                    - retail
                    - garages
                    - farmyard
                    - construction
                    # all the below are not really landuses but sometimes drawn outside of residential/commercial landuses
                    - university
                    - school
                    - college
                    - kindergarten
                    - library
                    - hospital
                    - nursing_home
                    - social_facility
                    - clinic
                    - parking
                    - conference_centre
                    - theme_park
            draw:
                polygons:
                    color: global.town_color
        green:
            filter:
                class:
                    - cemetery
                    - playground
                    - pitch
                    - track
                    - zoo
            draw:
                polygons:
                    color: global.green_color

    # openmaptiles: city walls, dams, walls, retaining walls, fences don't seem to exist

    pedestrian-areas:
        data: { source: openmaptiles , layer: transportation }
        squares:
            filter: { subclass: [pedestrian] , $zoom: { min: 17 } }
            draw:
                lines:
                    color: global.square_outline_color
                    width: function () { return 1/4 * Math.log($zoom); }
                    order: 20
                polygons:
                    color: global.square_color
                    order: 21


styles:
    boundary_dashes:
        base: lines
        dash: [1, 2]
        blend: translucent
    buildings-style:
        base: polygons
        blend: opaque
    buildings-outline-style:
        base: lines
        blend: inlay
    lines-coast:
        base: lines
        texcoords: true
        blend: inlay
        shaders:
            uniforms:
                u_waves: 1.5
                u_speed: 0.08
                u_color: [1.,1.,1.0,0.4]
            blocks:
                color: |
                    float x = (v_texcoord.x - 0.495);
                    if(x > 0.0) {
                        float opacity = 1.-x;
                        float waves = fract(u_waves*(1.-x)-u_time*u_speed);
                        color = mix(color, u_color, opacity * waves * u_color.a);
                    } else {
                        color.a = 0.0;
                    }
