layers:

    road-labels:
        data: { source: openmaptiles, layer: transportation_name }
        filter: { $zoom: { min: 14 } }
        draw:
            text:
                text_source: global.name_source
                buffer: 8px
                text_wrap: 25
                max_lines: 3
                priority: 20
                transition:
                    show:
                        time: .2s
                    hide:
                        time: 0.2s
                font:
                    family: global.text_font_family
                    fill: global.text_fill_color
                    size: global.text_size
                    stroke: global.text_stroke
                    weight: normal

    water-labels:
        data: { source: openmaptiles, layer: [ water_name, waterway ] }
        filter: { not: { brunnel: tunnel } }
        draw:
            text:
                text_source: global.name_source
                buffer: 12px
                priority: function() { return feature.rank }
                transition:
                    show:
                        time: .2s
                    hide:
                        time: 0.2s
                font:
                    family: global.text_font_family
                    fill: global.text_water_color
                    style: italic
                    size: global.text_size
                    stroke: global.text_water_stroke

    country-labels:
        data: { source: openmaptiles, layer: place }
        filter: { class: country }
        draw:
            text:
                text_source: global.name_source
                buffer: 12px
                priority: function() { return feature.rank }
                transition:
                    show:
                        time: .2s
                    hide:
                        time: 0.2s
                font:
                    family: global.text_font_family
                    fill: global.text_fill_color
                    size: global.text_size
                    stroke: global.text_countries_stroke
                    transform: uppercase
                    weight: bold

    place-labels:
        data: { source: openmaptiles, layer: place }
        filter: { not: { class: [ continent, country ] } }
        draw:
            text:
                text_source: global.name_source
                buffer: 4px
                priority: function() { return 6 + feature.rank }
                transition:
                    show:
                        time: .2s
                    hide:
                        time: 0.2s
                font:
                    family: global.text_font_family
                    fill: global.text_fill_color
                    size: global.text_size
                    stroke: global.text_places_stroke

        city:
            filter: { class: city, $zoom: { min: 6 } }
            draw:
                text:
                    font:
                        weight: bold

    housenumber-labels:
        # stadiamaps: this information is missing
        data: { source: openmaptiles, layer: housenumber }
        filter: { $zoom: { min: 19 } }
        draw:
            text:
                text_source: housenumber
                priority: 30
                font:
                    family: global.text_font_family
                    fill: global.text_fill_color
                    size: global.text_size
                    stroke: global.text_stroke

global:
    name_source: |
        function() {
            // Use preferred language label if available
            return (global.language && (feature['name_'+global.language] || feature['name:'+global.language]) ) || feature.name;
        }
